#!/bin/bash

#set -x

NOTE=${1:-win}

YAY_REPO="${HOME:?}/.yay"
YAY_DATE=$(date +"%Y-%m-%d")
YAY_REMOTE="${YAY_REMOTE:-origin}"
YAY_BRANCH="${YAY_BRANCH:-master}"

re=$(tput sgr0)
bo=$(tput bold)
gr=$(tput setaf 2)
bl=$(tput setaf 4)
ma=$(tput setaf 5)
cy=$(tput setaf 6)
wh=$(tput setaf 7)

if [ ! -d "${YAY_REPO:?}" ]; then
    mkdir -p ${YAY_REPO:?}
    pushd ${YAY_REPO:?} > /dev/null
    git init .
    git checkout -b "${YAY_BRANCH:?}"
    cat > README.md << EOF
Yay repo for ${USER}!
=====================

Use this repo to track your successes. Just type Yay and document your success in as much detail as you want.
When you save the file it will automatically sync to a remote you specify!

Other helpful commands:

Status for yay repo.

    yay status

Git commands for yay repo

    yay git log
EOF
    git add .
    git commit -m 'Yay! Initialized yay repo!'
    echo "Url to yay repo: "
    read YAY_REPO_URL
    git remote add "${YAY_REMOTE:?}" "${YAY_REPO_URL:?}"
    popd > /dev/null
fi

pushd ${YAY_REPO:?} > /dev/null
    case ${NOTE:?} in
    git)
        $@
        ;;
    status|remote|log)
        git $@
        ;;
    remind|reminder)
        reminder_file=$(find ${YAY_REPO:?} -type f -name '*.md' ! -name 'README.md' | python -c 'import sys, random; print(random.choice(sys.stdin.readlines()).strip())')
        accomplishment=$(cat ${reminder_file:?} | grep -e '=' -B1 | grep -v '=' | head -n 1)
        echo "On ${cy}$(basename "${reminder_file%/*}")${wh} you ${gr}${accomplishment:?}${wh}!${re}"
        ;;
    check)
        if [ -z $(find ${YAY_REPO:?} -type d -name ${YAY_DATE:?} -print -quit) ]; then
            echo "You have not recorded a success today yet. Remember to record a success today with '${cy}yay${wh}'!${re}"
        fi
        ;;
    update)
        git fetch ${YAY_REMOTE:?}
        git merge "${YAY_REMOTE:?}/${YAY_BRANCH:?}"
        ;;
    *)
        YAY_DIR=${YAY_DATE}
        mkdir -p ${YAY_DIR:?}
        YAYFILE="${YAY_DIR:?}/${NOTE:?}.md"
        if [ ! -f "${YAYFILE:?}" ]; then
            cat > "${YAYFILE:?}" << EOL
Summary here!
==================

EOL
        else
            cat >> "${YAYFILE:?}" << EOL
New Summary Here
==================

EOL
        fi
        git add "${YAYFILE:?}"

        $EDITOR "${YAYFILE:?}"

        if git diff --quiet -- "${YAYFILE:?}" ; then
            git reset --hard HEAD
        else
            git add "${YAYFILE:?}"
            git commit -m "$(grep '===' -B 1 "${YAYFILE:?}" | tail -n2 | head -n1)"
            git fetch ${YAY_REMOTE:?}
            git rebase "${YAY_REMOTE:?}/${YAY_BRANCH:?}"
            git push "${YAY_REMOTE:?}" "${YAY_BRANCH:?}"
        fi
        ;;
    esac
popd > /dev/null
