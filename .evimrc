" ============================================================================
"
" Britt Gresham's 'Easy and Perfect' Vimrc
"
" Feel free to take whatever helps you the most
"
" ============================================================================


" ============================================================================
"  Initialization {{{1
" ============================================================================

    " Use Vim settings instead of Vi settings.
    set nocompatible

    " Clear Autocommands
    autocmd!

    " Let Vim look for settings in a file
    set modeline
    set modelines=5

    " If vimrc has been modified, re-source it for fast modifications
    autocmd! BufWritePost *vimrc source %

    " Setting up Vundle - the vim plugin bundler
        let iCanHazVundle=1
        let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
        if !filereadable(vundle_readme)
            echo "Installing Vundle.."
            echo ""
            silent !mkdir -p ~/.vim/bundle
            silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
            let iCanHazVundle=0
        endif
        set rtp+=~/.vim/bundle/vundle/
        call vundle#rc()

        if iCanHazVundle == 0
            echo "Installing Bundles, please ignore key map error messages"
            echo ""
            :BundleInstall
        endif

    " Set Leader
    let mapleader = ","

    " Wildmode options {{{2
    " ----------------
        set wildmenu
        set wildmode=longest:full,full
        set wildignore+=*.o,*.out,*.obj,*.rbc,*.rbo,*.class,*.gem
        set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
        set wildignore+=*.jpg,*.png,*.gif,*.jpeg,*.bmp
        set wildignore+=*.hg,*.git,*.svn
        set wildignore+=*.exe,*.dll
        set wildignore+=*.pyc
        set wildignore+=*.DS_Store
    " }}}

"========================================================================= }}}
" Vundle Bundles {{{1
"============================================================================

    " Required Plugins
    Bundle 'gmarik/vundle'

    " Approved Bundles
    Bundle 'godlygeek/tabular'
    Bundle 'klen/python-mode'
    Bundle 'nelstrom/vim-visual-star-search'
    Bundle 'scrooloose/nerdtree'
    Bundle 'tpope/vim-repeat'
    Bundle 'tpope/vim-speeddating'
    Bundle 'tpope/vim-surround'
    Bundle 'vim-scripts/AutoClose'
    Bundle 'pangloss/vim-javascript'
    Bundle 'bling/vim-airline'
    Bundle 'bling/vim-bufferline'
    Bundle 'puppetlabs/puppet-syntax-vim'
    Bundle 'scrooloose/syntastic'
    Bundle 'tristen/vim-sparkup'
    Bundle 'tomtom/tlib_vim'
    Bundle 'SirVer/ultisnips'
    Bundle 'honza/vim-snippets'
    Bundle 'kien/ctrlp.vim'

    " Testing Bundles
    Bundle 'tpope/vim-fugitive'
    Bundle 'tpope/vim-git'
    Bundle 'ekalinin/Dockerfile.vim'
    Bundle 'tpope/vim-dispatch'

    filetype plugin indent on

" ========================================================================= }}}
"  Filetype Association {{{1
" ============================================================================

    au BufRead,BufNewFile *vimrc
      \ set foldmethod=marker
    augroup Puppet
        autocmd! BufEnter *.pp set filetype=puppet
    augroup end
    augroup RubySyntaxFiles " Ruby syntax
        autocmd! BufRead,BufEnter *.rb,*.rake set tabstop=2 sts=2 shiftwidth=2 filetype=ruby
        autocmd! BufEnter Rakefile set filetype=ruby
        autocmd! BufEnter Gemfile set filetype=ruby
    augroup end
    augroup MarkdownFiles " Instead of this Modulo file bullshit
        autocmd! BufEnter *.md set filetype=markdown
    augroup end
    au BufRead,BufNewFile *_spec.rb
      \ nmap <F8> :!rspec --color %<CR>
    augroup PatchDiffHighlight
        autocmd!
        autocmd BufEnter *.patch,*.rej,*.diff syntax enable
    augroup end

" ========================================================================= }}}
"  Look and Feel {{{1
" ============================================================================
    " Basics / Misc {{{2
    " -------------

        " Let netrw show things in a tree structure instead of a flat list
        "let g:netrw_liststyle=3

        " Used for saving git and hg commits
        filetype on
        filetype off

        " Set to allow you to backspace while back past insert mode
        set backspace=2

        " Increase History
        set history=100

        " Enable relative number in the left column
        set number

        " Give context to where the cursor is positioned in a file
        set scrolloff=14

        " Use UTF-8 encoding
        set encoding=utf-8 nobomb

        " Hide buffers after they are abandoned
        set hidden

        " Disable files that don't need to be created
        set noswapfile
        set nobackup
        set nowritebackup

    " }}}
    " Tabbing and Spaces {{{2
    " ------------------

        " Use 4 spaces instead of tabs
        set ts=4
        set sts=4
        set shiftwidth=4
        set expandtab

        " Auto indent
        set autoindent

        " replace trailing whitespace and tabs with unicode characters
        exec "set listchars=tab:\uBB\uBB,trail:\u2716,nbsp:~"
        set list

    " }}}
    " Color Settings {{{2
    " --------------

        " Enable highlight search and highlight when searching
        set hlsearch
        set incsearch
        set ignorecase
        set smartcase
        set showmatch
        set gdefault

        " Enable syntax highlighting
        syntax enable

        " Colorscheme
        colorscheme desert

    " }}}
    " Highlight Trailing Whitespace {{{2
    " -----------------------------
        highlight ExtraWhitespace ctermbg=darkblue guibg=darkblue
        match ExtraWhitespace /\s\+$/
    " }}}
    " Persistent Undo {{{2
    " ---------------
        if v:version >= 703
            set undofile
            set undodir=~/.vim/tmp,~/.tmp,~/tmp,~/var/tmp,/tmp
        endif
    " }}}
    " Spelling / Typos {{{2
    " ----------------
        :command! WQ wq
        :command! Wq wq
        :command! W w
        :command! Q q
    " }}}
    " Open file and goto previous location {{{2
    " ------------------------------------
        autocmd BufReadPost *  if line("'\"") > 1 && line("'\"") <= line("$")
                   \|     exe "normal! g`\""
                   \|  endif
    " }}}
" ========================================================================= }}}
"  Plugin Settings {{{1
" ============================================================================
    " Airline Settings {{{2
    " ----------------
        let g:airline#extensions#tabline#enabled = 1
        set laststatus=2
    " }}}
    " Vim Session Persist {{{2
    " -------------------
        let g:session_autosave = 1
        let g:session_autoload = 1
    " }}}
    " Snippets Variables {{{2
    " ------------------
        let g:snips_author = 'Britt Gresham'
    " }}}
    " NERDTree {{{2
    " --------
        let NERDTreeIgnore=['\.pyc$']
        let g:NERDTreeChDirMode=2
    " }}}
    " Python Mode Settings {{{2
    " --------------------
        let g:pymode_lint_checker = "pyflakes,pep8"
        let g:pymode_lint_onfly = 0
        let g:pymode_folding = 0
        let g:pymode_rope_complete_on_dot = 0
        let g:pymode_rope_lookup_project = 0
    " }}}
    " CtrlP Settings {{{2
    " --------------------
        let g:crtlp_show_hidden=1
        let g:ctrlp_working_path_mode='rw'
    " }}}
    " Indent Guides {{{2
    " --------------------
        let g:indent_guides_guide_size=1
    " }}}
"" ======== }}}
"  Mappings {{{1
" ============================================================================
    " Disable Q (Command Shell Mode) {{{2
    " ------------------------------
        nnoremap Q <nop>
        nnoremap gq <nop>
        nnoremap q: <nop>
    " }}}
    " * No longer moves the cursor when hitting it the first time {{{2
    " -----------------------------------------------------------
        nmap * *Nzz
        nmap # #Nzz
    " }}}
    " Y y$ Fix {{{2
    " --------
        " Why the hell isn't this the normal behavior?
        nnoremap Y y$
    " }}}
    " Easy Window Switching {{{2
    " ---------------------
        map <C-h> <C-w>h
        map <C-j> <C-w>j
        map <C-k> <C-w>k
        map <C-l> <C-w>l
    " }}}
    " Space folds and unfolds {{{2
    " -----------------------
        nnoremap <Space> za
        vnoremap <Space> za
    " }}}
    " Zencoding {{{2
    " ---------
        let g:user_zen_leader_key='<c-e>'
        let g:use_zen_complete_tag = 1
    " }}}
    " Misc {{{2
    " ----
        imap jj <Esc>:redraw!<CR>:syntax sync fromstart<CR>
    " }}}
    " Vimrc Toggle {{{2
    " ------------
        function! ToggleVimrc()
            if expand("%:p") =~ "~/.evimrc"
                :bd
            else
                :vsp ~/.evimrc
            endif
        endfunction
        nmap <leader>v :call ToggleVimrc()<CR>
    " }}}
    " NERDTreeToggle {{{2
    " --------------
        function! NERDTreeToggleOrFocus()
            if expand("%") =~ "NERD_tree"
                :NERDTreeToggle
            else
                call NERDTreeFocus()
            endif
        endfunction
        nnoremap <leader>n :call NERDTreeToggleOrFocus()<CR>
    " }}}
    " Quickfix list nav with C-n and C-m {{{2
    " ----------------------------------
        map <C-n> :cn<CR>
        map <C-m> :cp<CR>
    " }}}
    " Format JSON with python {{{2
    " -----------------------
        map <Leader>j !python -m json.tool<CR>
    " }}}
    " Toggle Paste/No Paste {{{2
    " --------------------
        nnoremap <leader>p :set paste!<CR>
    " }}}
    " Don't use Vim Regex {{{2
    " --------------------
        nnoremap / /\v
        vnoremap / /\v
    " }}}
    " Keep search matches in the center of the screen {{{2
    " --------------------
        nnoremap n nzzzv
        nnoremap N Nzzzv
    " }}}
    " Sudo write {{{2
    " --------------------
        cnoremap w!! w !sudo tee % >/dev/null
    " }}}
    " Leader Maps {{{2
    " --------------------
        " Clear matches
        noremap <silent> <leader><space> :noh<cr>:call clearmatches()<cr>
        " Clean trailing whitespace
        nnoremap <leader>ww mz:%s/\s\+$//<cr>:let @/=''<cr>`z"
        " Redraw screen. Sometimes shit happens.
        nnoremap <leader>r :syntax sync fromstart<cr>:redraw!<cr>
        " Focus current fold
        nnoremap <leader>f mzzMzvzz15<c-e>`z<cr>
        " Rspec Tests
        function! RSpecCurrent()
          execute("!clear && rspec " . expand("%p") . ":" . line("."))
        endfunction
        nnoremap <leader>s :call RSpecCurrent()<cr>
        " Toggle Diff Mode
        function! DiffToggle()
            if &diff
                diffoff
            else
                diffthis
                set fdm=diff
            endif
        endfunction
        nnoremap <leader>d :call DiffToggle()<cr>
        nnoremap <leader>g :Gstatus<cr>
    " }}}
" ========================================================================= }}}
"  Performance Optimizations {{{1
" ============================================================================

    " Fast terminal connections
    set ttyfast

    " Don't redraw when running macros
    set lazyredraw

    " Dear Future Britt,
    "   Don't you dare turn on these settings. I've left this here for you as
    "   a note to save yourself the trouble of accidentally turning it on or
    "   adding it in the future. IT FUCKS UP YOUR BEAUTIFUL TEXT OBJECTS AND
    "   WILL INFURIATE YOU TO NO END.
    "
    "   Sincerely,
    "       A very irritated version of yourself.
    "       - 10/2/2014
    " Set timeout on keycodes but not mappings
    "set notimeout
    "set ttimeout
    "set ttimeoutlen=10

    " Syntax optimazations
    syntax sync minlines=256
    " set syntaxcol=256

" ======================================================================== }}}
"  Post Configurations {{{1
" ============================================================================
    " Find ./*.vimrc"
    if filereadable("./.vimrc.local")
        silent echo "Loading ./.vimrc.local"
        source ./vimrc.local
    endif
    " Remap mappings that get overwritten by plugins
    set rtp+=~/.vim/after/
"" }}}
" ============================================================================

" vim: foldmethod=marker foldmarker={{{,}}} ts=4 sts=4 sw=4 expandtab:
